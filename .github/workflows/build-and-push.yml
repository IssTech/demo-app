name: Docker Image CI/CD

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Define environment variables used throughout the workflow
env:
  REGISTRY: ghcr.io
  # The image name uses the repository name (e.g., 'your-org/fastapi-app')
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GitHub Container Registry (GHCR)

    steps:
      - name: Checkout repository
        # Action to get your source code
        uses: actions/checkout@v4
      
      - name: Log in to the Container registry
        # Log in to ghcr.io using the PAT (Personal Access Token) provided by the GitHub runtime
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # Use the GITHUB_TOKEN for authentication
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags) for Docker
        # Automatically generates tags like 'ghcr.io/org/repo:latest' and 'ghcr.io/org/repo:sha'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short

      - name: Build and push Docker image
        # Uses the Dockerfile in the current directory and pushes it
        uses: docker/build-push-action@v5
        with:
          context: . # Looks for Dockerfile in the current directory
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
